#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

HOST_NAME="capture"

if [[ "$(docker images -q "${HOST_NAME}:latest" 2> /dev/null)" == "" || "$2" != "" ]]; then
  docker build -t "${HOST_NAME}:latest" "${DIR}/build/"
  if [ $? -eq 0 ]; then
      echo 'Build done'
  else
      echo 'Build failed'
      exit 1
  fi
fi

if [ -z "$1" ]; then
  echo 'Usage: '$0' docker-container-name'
  exit 1
fi

CONTAINER="$1"
RUN_NAME="${HOST_NAME}-${CONTAINER}"
FILE_NAME="/tmp/pcap/pcap_${CONTAINER}_$(date +%Y_%m_%d_%H_%M_%S).pcap"
echo 'Capture to file: '${FILE_NAME}
docker run --rm --name "${RUN_NAME}" \
    -v "/tmp/pcap:/tmp/pcap:rw" \
    --net=container:"${CONTAINER}" \
    --cap-add=NET_ADMIN \
  "${HOST_NAME}:latest" \
  tshark -i eth0 -w "${FILE_NAME}"
